
buildscript {
    ext.kotlin_version = '1.3.40'
    ext {
        kotlin_version = '1.3.40'
        bootVersion = '2.0.1.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$bootVersion"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "maven"
apply plugin: 'org.springframework.boot'

group 'com.frederikam'
version '1.0'

sourceCompatibility = 11
targetCompatibility = 11

ext {
    jdaVersion = "4.BETA.0_10"
    logbackVersion = "1.2.3"
    lavaplayerVersion = "1.3.17"
    nasVersion = "1.1.0"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "net.dv8tion:JDA:$jdaVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "com.sedmelluq:lavaplayer:$lavaplayerVersion"
    implementation "com.sedmelluq:jda-nas:$nasVersion"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

bootRun {
    //compiling tests during bootRun increases the likelihood of catching broken tests locally instead of on the CI
    dependsOn compileTestJava

    //pass in custom jvm args
    // source: https://stackoverflow.com/a/25079415
    // example: ./gradlew bootRun -PjvmArgs="--illegal-access=debug -Dwhatever=value"
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}

bootJar {
    archiveName = "fip.jar"
    springBoot {
        // Required for kotlin eval
        requiresUnpack '**/kotlin-*.jar'
    }
    doLast {
        //copies the jar into a place where the Dockerfile can find it easily (and users maybe too)
        copy {
            from 'build/libs/fip.jar'
            into '.'
        }

        // For publishing
        copy {
            from 'build/libs/fip.jar'
            into 'build/libs'
            rename {"fip-${rootProject.version}.jar"}
        }
    }
}

// Makes sure JitPack packages the jar
install.dependsOn bootJar
